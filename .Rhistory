nodelist
numnodes
count <- count + 1
nodelist[[1]]
# for(i in nodelist[[1]])
i<-2
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[i]] <- leftnode + (1:numnodes)
nodelist
nodelist[[i]] <- rightnode + (1:numnodes)
nodelist
leftnode
rightnode
leftnode:rightnode
# for(i in leftnode:rightnode)
i<-2
nodelist[[i]] <- rightnode + (1:numnodes)
nodelist
# for(i in leftnode:rightnode)
i<-3
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[i]] <- nodelist[[i-1]] + (1:numnodes)
nodelist[[i-1]]
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
nodelist
# for(i in leftnode:rightnode)
i<-2
max(nodelist[[i-1]])
nodelist
nodelist
leftnode
rightnode
nodelist[[leftnode]]
min(nodelist[[leftnode]])
rightnode <-
max(nodelist[[rightnode]])
rightnode
nodelist
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
nodelist
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
leftnode
leftnode
nodelist <- list()
count <- 1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
leftnode <- 2
rightnode <- leftnode-1 + numnodes
nodelist[[1]] <- leftnode:rightnode
nodelist
count <- count + 1
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
nodelist
leftnode
rightnode
leftnode
nodelist[[leftnode]]
leftnode <- min(nodelist[[leftnode]])
rightnode
max(nodelist[[rightnode]])
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
leftnode
rightnode
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
nodelist
leftnode
rightnode
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
leftnode
rightnode
leftnode:rightnode
length(leftnode:rightnode)
rightnode-leftnode
rightnode-(leftnode-1)
nleaf <- rightnode-(leftnode-1)
nleaf
max(nodelist[[1]] )
nodelist[[1]]
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
while(nleaf <= 50) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
}
nodelist
leftnode
rightnode
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
while(nleaf <= 50) {
leftnode <- leftnodenew
rightnode <- rightnodenew
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnodenew <- min(nodelist[[leftnode]])
rightnodenew <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
}
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
leftnodenew <- leftnode
rightnodenew <- rightnode
while(nleaf <= 50) {
leftnode <- leftnodenew
rightnode <- rightnodenew
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnodenew <- min(nodelist[[leftnode]])
rightnodenew <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
}
nleaf
nodelist
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
leftnodenew <- leftnode
rightnodenew <- rightnode
while(nleaf <= 30) {
leftnode <- leftnodenew
rightnode <- rightnodenew
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnodenew <- min(nodelist[[leftnode]])
rightnodenew <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
}
nleaf
nodelist
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
leftnodenew <- leftnode
rightnodenew <- rightnode
while(nleaf <= 15) {
leftnode <- leftnodenew
rightnode <- rightnodenew
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnodenew <- min(nodelist[[leftnode]])
rightnodenew <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
}
nleaf
nodelist <- list()
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
nleaf
leftnodenew <- leftnode
rightnodenew <- rightnode
while(nleaf <= 10) {
leftnode <- leftnodenew
rightnode <- rightnodenew
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnodenew <- min(nodelist[[leftnode]])
rightnodenew <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
}
nleaf
nodelist
leftnode
rightnode
leftnodenew
rightnodenew
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= 10) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnodenew-(leftnodenew-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
nodelist
leftnode
leftnodes
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= 10) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
nodelist
leftnodes
rightnodes
leftnodes[length(leftnodes)-2]
rightnodes[length(rigthnodes)-2]
rightnodes[length(rightnodes)-2]
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= 5) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
leftnodes[length(leftnodes)-2]
rightnodes[length(rightnodes)-2]
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= 5) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
leftnodes[length(leftnodes)-2]
rightnodes[length(rightnodes)-2]
nodelist
leftnodes
rightnodes
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
leftnodes[count] <- rightnodes[count] <- 1
count <- count+1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= 5) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
leftnodes[length(leftnodes)-2]
rightnodes[length(rightnodes)-2]
nodelist
leftnodes[length(leftnodes)-2]
rightnodes[length(rightnodes)-2]
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
leftnodes[count] <- rightnodes[count] <- 1
count <- count+1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
if(numnodes > maxnleaf)
stop("bla bla bla.")
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= maxnleaf) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
nodelist
leftnodes[length(leftnodes)-2]
nodelist <- nodelist[1:rightnodes[length(rightnodes)-2]]
maxnleaf <- 10
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
leftnodes[count] <- rightnodes[count] <- 1
count <- count+1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
if(numnodes > maxnleaf)
stop("bla bla bla.")
nodelist[[1]] <- 1 + (1:numnodes)
nodelist
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= maxnleaf) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nleaf
nodelist
leftnodes[length(leftnodes)-2]
nodelist <- nodelist[1:rightnodes[length(rightnodes)-2]]
nodelist
gen_tree_structure <- function(maxnleaf=20) {
nodelist <- list()
leftnodes <- rightnodes <- 0
count <- 1
leftnodes[count] <- rightnodes[count] <- 1
count <- count+1
numnodes <- sample(2:3, size=1, prob=c(2,1))
numnodes
if(numnodes > maxnleaf)
stop("bla bla bla.")
nodelist[[1]] <- 1 + (1:numnodes)
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= maxnleaf) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
leftnodes[length(leftnodes)-2]
nodelist <- nodelist[1:rightnodes[length(rightnodes)-2]]
return(nodelist)
}
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
gen_tree_structure(2)
