y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) #- 10  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3 + gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3 + gap, xend = 3 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 5.5 + gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 + gap, xend = 5.5 + gap, y = y_position, yend = y_position + 1, colour = "black")#+
# Continue adding more segments as needed for other groups
# Print the plot
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) #- 10  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 5.5 + gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 + gap, xend = 5.5 + gap, y = y_position, yend = y_position + 1, colour = "black")#+
# Continue adding more segments as needed for other groups
# Print the plot
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) #- 10  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 + gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 + gap, xend = 5.5 + gap, y = y_position, yend = y_position + 1, colour = "black")#+
# Continue adding more segments as needed for other groups
# Print the plot
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 1  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")#+
# Continue adding more segments as needed for other groups
# Print the plot
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 2 + 3.5 + gap, xend = 2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 2 + 3.5 + gap, xend = 2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 2 + 5.5 - gap, xend = 2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
# Continue adding more segments as needed for other groups
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
for (i in 1:6) {
p1 <- p1 +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = i*2 + 5.5 - gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
}
# Continue adding more segments as needed for other groups
# Print the plot
p1
0.8-gap
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
for (i in 1:6) {
p1 <- p1 +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = i*2 + 5.5 - gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
}
# Continue adding more segments as needed for other groups
p1 <- p1 +
annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 5.35 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 7*2 + 5.5 - gap, xend = 7*2 + 5.35 - gap, y = y_position, yend = y_position + 1, colour = "black")
# Print the plot
p1
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
p1
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
for (i in 1:6) {
p1 <- p1 +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = i*2 + 5.5 - gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
}
# Continue adding more segments as needed for other groups
p1 <- p1 +
annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 7*2 + 5.5 - gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
# Print the plot
p1
library("ggplot2")
data_plot <- data_ger
data_plot$Period <- "Observation"
data_plot$Period[data_plot$Year>2019] <- "Post-observation"
data_plot$Period <- factor(data_plot$Period, levels=c("Observation", "Post-observation"))
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
for (i in 1:7) {
p1 <- p1 +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = i*2 + 5.5 - gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
}
# Continue adding more segments as needed for other groups
# p1 <- p1 +
#   annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
#   annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
#   annotate("segment", x = 7*2 + 5.5 - gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
#
# Print the plot
p1
p2 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Gender)) +
geom_boxplot() +
labs(title = "Employment rates by year and gender",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1))
p3 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Age)) +
geom_boxplot() +
labs(title = "Employment Rates by year and age",
x = "Year",
y = "Employment Rate") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels for better visibility
p3
p1
p2 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Gender)) +
geom_boxplot() +
labs(title = "Employment rates by year and gender",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1))
p2
p3 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Age)) +
geom_boxplot() +
labs(title = "Employment Rates by year and age",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels for better visibility
p3
library("RColorBrewer")
display.brewer.all(n=3, type="div")
colors <- brewer.pal(3, "RdBu")
colors <- brewer.pal(3, "RdYlBu")
library("RColorBrewer")
display.brewer.all(n=3, type="div")
colors <- brewer.pal(3, "RdYlBu")
selectedColors_1 <- c(colors[1], colors[3])
selectedColors_2 <- brewer.pal(3, "Spectral")
p2 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Gender)) +
geom_boxplot() +
labs(title = "Employment rates by year and gender",
x = "Year",
y = "Employment rate") +
theme_bw() +
scale_fill_manual(values = selectedColors_1) +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1))
p2
p3 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Age)) +
geom_boxplot() +
labs(title = "Employment Rates by year and age",
x = "Year",
y = "Employment rate") +
theme_bw() +
scale_fill_manual(values = selectedColors_2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels for better visibility
p3
library("patchwork")
library("ggplot2")
data_plot <- data_ger
data_plot$Period <- "Observation"
data_plot$Period[data_plot$Year>2019] <- "Post-observation"
data_plot$Period <- factor(data_plot$Period, levels=c("Observation", "Post-observation"))
p1 <- ggplot(data_plot, aes(x = factor(Year), y = OBS_VALUE, fill = Period)) +
geom_boxplot() +
labs(title = "Employment rates by year",
x = "Year",
y = "Employment rate") +
theme_bw() +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1)) +
scale_fill_manual(values=c("#4DB8A7", "#A9A9A9"))
# Add horizontal brackets
# Example for bracket under first three boxplots
y_position = min(data_plot$OBS_VALUE) - 2  # Adjust this based on your data
gap = 0.15  # Adjust the gap to fit your aesthetics
p1 <- p1 +
annotate("segment", x = 0.8 - gap, xend = 3.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 0.8 - gap, xend = 0.8 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 - gap, xend = 3.5 - gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = 3.5 + gap, xend = 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = 5.5 - gap, xend = 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
for (i in 1:7) {
p1 <- p1 +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
annotate("segment", x = i*2 + 3.5 + gap, xend = i*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
annotate("segment", x = i*2 + 5.5 - gap, xend = i*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
}
# Continue adding more segments as needed for other groups
# p1 <- p1 +
#   annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position, colour = "black") +
#   annotate("segment", x = 7*2 + 3.5 + gap, xend = 7*2 + 3.5 + gap, y = y_position, yend = y_position + 1, colour = "black") +
#   annotate("segment", x = 7*2 + 5.5 - gap, xend = 7*2 + 5.5 - gap, y = y_position, yend = y_position + 1, colour = "black")
#
# Print the plot
p1
p2 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Gender)) +
geom_boxplot() +
labs(title = "Employment rates by year and gender",
x = "Year",
y = "Employment rate") +
theme_bw() +
scale_fill_manual(values = selectedColors_1) +
theme(axis.text.x = element_text(color="black", angle = 90, hjust = 1))
p2
p3 <- ggplot(data_ger, aes(x = factor(Year), y = OBS_VALUE , fill = Age)) +
geom_boxplot() +
labs(title = "Employment Rates by year and age",
x = "Year",
y = "Employment rate") +
theme_bw() +
scale_fill_manual(values = selectedColors_2) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels for better visibility
p3
library("patchwork")
p <- p1 / p2 / p3
p
ggsave("./concdrift/results/figures/FigureXY.pdf", width=12, height=13.5)
library(ipflasso)
?Zobolas
?cv2.ipflasso
?cvr2.ipflasso
25/17
choose(500,2)
choose(700,2)
choose(4,2)
?kmeans
choose(1000,2)
1329/5
1042/8
library("rgl")
myfun <- function(x1, x2) {
x1 + x2
}
plot3d(myfun, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)))
library("rgl")
myfun <- function(x1, x2) {
x1 + x2
}
plot3d(myfun, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)))
myfun2 <- function(x1, x2) {
x1 + x1 * x2
}
plot3d(myfun2, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)), add=TRUE, col="lightblue")
myfun3 <- function(x1, x2) {
x1 + x2 + x1 * x2
}
plot3d(myfun3, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)), add=TRUE, col="blue")
myfun4 <- function(x1, x2) {
x1 * x2
}
plot3d(myfun4, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)), add=TRUE, col="green")
sqrt(2)
library("rgl")
myfun <- function(x1, x2) {
x1 + x2
}
plot3d(myfun, xlim = c(-sqrt(2), sqrt(2)), ylim = c(-sqrt(2), sqrt(2)))
x1 <- runif(200, -sqrt(2), sqrt(2))
x2 <- runif(200, -sqrt(2), sqrt(2))
x3 <- runif(200, -sqrt(2), sqrt(2))
x4 <- runif(200, -sqrt(2), sqrt(2))
x5 <- runif(200, -sqrt(2), sqrt(2))
x6 <- runif(200, -sqrt(2), sqrt(2))
x1 <- runif(200, -sqrt(2), sqrt(2))
x2 <- runif(200, -sqrt(2), sqrt(2))
x1*x2
x1 <- runif(200, -sqrt(2), sqrt(2))
x2 <- runif(200, -sqrt(2), sqrt(2))
x3 <- runif(200, -sqrt(2), sqrt(2))
x4 <- runif(200, -sqrt(2), sqrt(2))
x5 <- runif(200, -sqrt(2), sqrt(2))
x6 <- runif(200, -sqrt(2), sqrt(2))
y <- x1*x2 + x3*x4 + x5*x6 + rnorm(200)
data <- data.frame(x1, x2, x3, x4, x5, x6, y)
simdata <- function() {
x1 <- runif(200, -sqrt(2), sqrt(2))
x2 <- runif(200, -sqrt(2), sqrt(2))
x3 <- runif(200, -sqrt(2), sqrt(2))
x4 <- runif(200, -sqrt(2), sqrt(2))
x5 <- runif(200, -sqrt(2), sqrt(2))
x6 <- runif(200, -sqrt(2), sqrt(2))
y <- x1*x2 + x3*x4 + x5*x6 + rnorm(200)
data <- data.frame(x1, x2, x3, x4, x5, x6, y)
return(data)
}
data <- simdata()
library("ranger")
?ranger
ui <- ranger(dependent.variable.name = "y", data=data, num.trees=1000, importance="permutation")
ui <- ranger(dependent.variable.name = "y", data=data, num.trees=1000, importance="permutation")$variable.importance
plot(ui)
simdata <- function() {
x1 <- runif(200, -sqrt(2), sqrt(2))
x2 <- runif(200, -sqrt(2), sqrt(2))
x3 <- runif(200, -sqrt(2), sqrt(2))
x4 <- runif(200, -sqrt(2), sqrt(2))
x5 <- runif(200, -sqrt(2), sqrt(2))
x6 <- runif(200, -sqrt(2), sqrt(2))
y <- x1 + x2 + x3 + x1*x2 + x3*x4 + x5*x6 + rnorm(200)
data <- data.frame(x1, x2, x3, x4, x5, x6, y)
return(data)
}
data <- simdata()
library("ranger")
ui <- ranger(dependent.variable.name = "y", data=data, num.trees=1000, importance="permutation")$variable.importance
plot(ui)
plot(ui, ylim=c(0, max(ui)))
ui <- ranger(dependent.variable.name = "y", data=data, num.trees=1000, importance="permutation")$variable.importance
plot(ui, ylim=c(0, max(ui)))
install.packages("Z:/Projects/UnityForests/shaff_0.1.1.tar.gz")
install.packages("nnls")
install.packages("Z:/Projects/UnityForests/shaff_0.1.1.tar.gz")
ui2 <- shaff(data, num.trees = 1000, K = 500)
library("shaff")
ui2 <- shaff(data, num.trees = 1000, K = 500)
head(data)
ui2 <- shaff(data, num.trees = 1000, K = 500)
traceback()
names(data)[names(data)=="y"] <- "Y"
ui2 <- shaff(data, num.trees = 1000, K = 500)
library("nnls")
ui2 <- shaff(data, num.trees = 1000, K = 500)
ui2
plot(ui2)
plot(ui1)
plot(ui2)
plot(ui)
plot(ui2)
plot(ui, ui2)
cor(ui, ui2)
summary(lm(Y ~ x1 + x2 + x3 + x1*x2 + x3*x4 + x5*x6, data=data))
plot(ui)
plot(ui2)
plot(ui)
plot(ui, ui2)
plot(ui, ui2)
par(mfrow=c(1,2))
plot(ui)
plot(ui2)
ui <- ranger(dependent.variable.name = "y", data=data, num.trees=5000, importance="permutation")$variable.importance
ui <- ranger(dependent.variable.name = "Y", data=data, num.trees=5000, importance="permutation")$variable.importance
par(mfrow=c(1,2))
plot(ui)
plot(ui2)
par(mfrow=c(1,2))
plot(ui, ylim=c(0, max(ui)))
plot(ui2, ylim=c(0, max(ui2)))
ui2 <- shaff(data, num.trees = 1000, K = 10)
plot(ui2, ylim=c(0, max(ui2)))
par(mfrow=c(1,2))
plot(ui, ylim=c(0, max(ui)))
plot(ui2, ylim=c(0, max(ui2)))
ui2 <- shaff(data, num.trees = 1000, K = 10)
plot(ui2, ylim=c(0, max(ui2)))
10*60/300
10*60/400
library(penalizedSVM)
install.packages("penalizedSVM")
library(penalizedSVM)
?sim.data
258/330
1/(258/330)
