p
options(scipen=0)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
datatemp <- dataobj$coeflist[[length(dataobj$coeflist)]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
datatemp <- dataobj$coeflist[[length(dataobj$coeflist)]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
datatemp <- dataobj$coeflist[[length(dataobj$coeflist)]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
datatemp <- dataobj$coeflist[[length(dataobj$coeflist)]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
datatemp <- dataobj$coeflist[[length(dataobj$coeflist)]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
datatemp <- dataobj$coeflist[[1]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
datatemp <- dataobj$coeflist[[2]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
dataobj$coeflist[[2]]$coefs
datatemp <- dataobj$coeflist[[2]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
datatemp <- dataobj$coeflist[[2]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
options(scipen=0)
p[,-1]
datatemp <- dataobj$coeflist[[10]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p[,-1]
options(scipen=0)
datatemp <- dataobj$coeflist[[20]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p[,-1]
options(scipen=0)
class(p)
datatemp <- dataobj$coeflist[[2]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p[,-1]
options(scipen=0)
class(p)
datatemp <- dataobj$coeflist[[10]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
datatemp <- dataobj$coeflist[[15]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
datatemp <- dataobj$coeflist[[25]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
datatemp <- dataobj$coeflist[[30]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
datatemp <- dataobj$coeflist[[35]]$datanode
names(datatemp)
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
options(scipen=999)
p
class(dataobj$coeflist[[i]])
i
i<-10
class(dataobj$coeflist[[i]])
names(dataobj$coeflist[[i]])
for(i in dataobj$coeflist) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)=="matrix")
res <- p[,-1]
if(class(p)=="numeric")
res <- p[,-1]
dataobj$coeflist[[i]]$p <- res
}
}
i
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)=="matrix")
res <- p[,-1]
if(class(p)=="numeric")
res <- p[,-1]
dataobj$coeflist[[i]]$p <- res
}
}
i
i<-1
datatemp <- dataobj$coeflist[[i]]$datanode
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
?multinom
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)=="matrix")
res <- p[,-1]
if(class(p)=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
warnings()
class(p)
i<-2
datatemp <- dataobj$coeflist[[i]]$datanode
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
class(p)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) x$p)
pvals
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
pvals
layers <- sapply(dataobj$coeflist, function(x) x$layer)
layers
boxplot(pvals ~ layers)
sapply(pvals, length)
rep(1:3, length=c(3,6,2))
rep(1:3, times=c(3,6,2))
rep(layers, times=sapply(pvals, length))
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
set.seed(1234)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
set.seed(1234)
pvalsvec <- layersvec <- c()
for(count in 1:100) {
boolFalse <- FALSE
while (boolFalse == FALSE)
{
tryCatch({
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
boolFalse <- TRUE
}, error = function(e){
}, finally = {})
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
pvalsvec <- c(pvalsvec, unlist(pvals))
layersvec <- c(layersvec, rep(layers, times=sapply(pvals, length)))
}
count
boxplot(pvalsvec ~ layersvec)
tapply(pvalsvec, layersvec, mean)
ui <- pvalsvec[layersvec==5]
head(ui)
length(ui)
ui
ui+1
sum(ui > 0.5)
any(is.na(ui > 0.5)
)
ui[is.na(ui > 0.5)]
tapply(pvalsvec, layersvec, mean, na.rm=TRUE)
hist(ui)
hist(ui, 100)
hist[pvalsvec[layersvec==5]
hist(pvalsvec[layersvec==5])
hist(pvalsvec[layersvec==5])
hist(pvalsvec[layersvec==5], 50)
set.seed(1234)
coeflist <- simulate_coefs(treestruc=treestruc, sdbeta0=sqrt(1),
sdbeta=sqrt(c(2.5, 2, 0.9, 0.7, 0.5)))
dataobj <- sim_data(n=1000, coeflist=coeflist)
pvalsvec <- layersvec <- c()
for(i in seq(along=dataobj$coeflist)) {
datatemp <- dataobj$coeflist[[i]]$datanode
if(!is.data.frame(datatemp))
dataobj$coeflist[[i]]$p <- NA
else {
library("nnet")
modtemp <- multinom(y ~ ., data = datatemp)
summary(modtemp)
z <- summary(modtemp)$coefficients/summary(modtemp)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
if(class(p)[1]=="matrix")
res <- p[,-1]
if(class(p)[1]=="numeric")
res <- p[-1]
dataobj$coeflist[[i]]$p <- res
}
}
pvals <- lapply(dataobj$coeflist, function(x) as.vector(x$p))
layers <- sapply(dataobj$coeflist, function(x) x$layer)
pvalsvec <- c(pvalsvec, unlist(pvals))
layersvec <- c(layersvec, rep(layers, times=sapply(pvals, length)))
boxplot(unlist(pvals) ~ rep(layers, times=sapply(pvals, length)))
boxplot(pvalsvec ~ layersvec)
library(hierclass)
?topdown
