library("scales")
default_colors <- hue_pal()(3)
default_colors
# Custom colors for the 4 factors
custom_colors <- c("baseline" = "darkgrey", "y" = "black")
# Custom line types for the 4 factors
custom_linetypes <- c("baseline" = "dashed", "y" = "solid")
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("weak") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("medium-strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/labeldrift.pdf", plot=p, width=12, height=16)
setwd("Z:/Projects/DESTATIS/PredErrorComplex/PPerfEstComplex")
xseq <- seq(-10.5, 10.5, length=400)
seasons <- 1:10
strengths <- c("weak", "medium-strong", "strong")
variables <- c("baseline", "x1", "x2", "x3")
ggdata <- expand.grid(x=xseq, variable=variables, season=seasons, strength=strengths, stringsAsFactors = FALSE)
ggdata <- ggdata[,ncol(ggdata):1]
getcoef <- function(t, startval, stopval) {
tstart <- 0
tend <- 1
b1 <- (stopval - startval)/(tend - tstart)
b0 <- startval - b1*tstart
return(b0 + b1*t)
}
scengrid <- expand.grid(variable=variables[-1], season=seasons, strength=strengths, stringsAsFactors = FALSE)
scengrid <- scengrid[,ncol(scengrid):1]
scengrid$xmu <- NA
ts <- seq(0.05,0.95, length=10)
for(i in 1:nrow(scengrid)) {
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 2)
}
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 1)
}
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -2)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 4)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 2)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -4)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 8)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 4)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -8)
}
}
ggdata$y <- NA
for(i in seq(along=strengths)) {
for(j in seq(along=seasons)) {
for(k in seq(along=variables)) {
indtemp <- which(ggdata$strength==strengths[i] & ggdata$season==seasons[j] & ggdata$variable==variables[k])
if (variables[k]=="baseline")
ggdata$y[indtemp] <- dnorm(xseq, mean=0, sd=1)
else
ggdata$y[indtemp] <- dnorm(xseq, mean=scengrid$xmu[scengrid$strength==strengths[i] & scengrid$season==seasons[j] & scengrid$variable==variables[k]], sd=1)
}
}
}
ggdata$season <- factor(paste0("season ", ggdata$season), levels=paste0("season ", 1:10))
library("ggplot2")
library("scales")
default_colors <- hue_pal()(3)
default_colors
# Custom colors for the 4 factors
custom_colors <- c("baseline" = "darkgrey", "x1" = "#F8766D", "x2" = "#00BA38", "x3" = "#619CFF")
# Custom line types for the 4 factors
custom_linetypes <- c("baseline" = "dashed", "x1" = "solid", "x2" = "solid", "x3" = "solid")
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("medium-strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
setwd("Z:/Projects/DESTATIS/PredErrorComplex/PPerfEstComplex")
xseq <- seq(-10.5, 10.5, length=400)
seasons <- 1:10
strengths <- c("weak", "medium-strong", "strong")
variables <- c("baseline", "x1", "x2", "x3")
ggdata <- expand.grid(x=xseq, variable=variables, season=seasons, strength=strengths, stringsAsFactors = FALSE)
ggdata <- ggdata[,ncol(ggdata):1]
getcoef <- function(t, startval, stopval) {
tstart <- 0
tend <- 1
b1 <- (stopval - startval)/(tend - tstart)
b0 <- startval - b1*tstart
return(b0 + b1*t)
}
scengrid <- expand.grid(variable=variables[-1], season=seasons, strength=strengths, stringsAsFactors = FALSE)
scengrid <- scengrid[,ncol(scengrid):1]
scengrid$xmu <- NA
ts <- seq(0.05,0.95, length=10)
for(i in 1:nrow(scengrid)) {
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 2)
}
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 1)
}
if (scengrid$strength[i]=="weak" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -2)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 4)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 2)
}
if (scengrid$strength[i]=="medium-strong" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -4)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x1") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 8)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x2") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 4)
}
if (scengrid$strength[i]=="strong" & scengrid$variable[i]=="x3") {
scengrid$xmu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = -8)
}
}
ggdata$y <- NA
for(i in seq(along=strengths)) {
for(j in seq(along=seasons)) {
for(k in seq(along=variables)) {
indtemp <- which(ggdata$strength==strengths[i] & ggdata$season==seasons[j] & ggdata$variable==variables[k])
if (variables[k]=="baseline")
ggdata$y[indtemp] <- dnorm(xseq, mean=0, sd=1)
else
ggdata$y[indtemp] <- dnorm(xseq, mean=scengrid$xmu[scengrid$strength==strengths[i] & scengrid$season==seasons[j] & scengrid$variable==variables[k]], sd=1)
}
}
}
ggdata$season <- factor(paste0("season ", ggdata$season), levels=paste0("season ", 1:10))
library("ggplot2")
library("scales")
default_colors <- hue_pal()(3)
default_colors
# Custom colors for the 4 factors
custom_colors <- c("baseline" = "darkgrey", "x1" = "#F8766D", "x2" = "#00BA38", "x3" = "#619CFF")
# Custom line types for the 4 factors
custom_linetypes <- c("baseline" = "dashed", "x1" = "solid", "x2" = "solid", "x3" = "solid")
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak", size=12) +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak") +
theme_bw() +
theme(plot.title=element_text(size=12), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("medium-strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/featuredrift.pdf", plot=p, width=12, height=16)
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("medium-strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("strong") +
theme_bw() +
theme(axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/featuredrift.pdf", plot=p, width=12, height=16)
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=14), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("medium-strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=14), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=14), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/featuredrift.pdf", plot=p, width=12, height=16)
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("weak") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("medium-strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1) +
ggtitle("strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(),
axis.ticks.y = element_blank(), strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/featuredrift.pdf", plot=p, width=12, height=16)
xseq <- seq(-4, 16, length=400)
seasons <- 1:10
strengths <- c("weak", "medium-strong", "strong")
variables <- c("baseline", "y")
ggdata <- expand.grid(x=xseq, variable=variables, season=seasons, strength=strengths, stringsAsFactors = FALSE)
ggdata <- ggdata[,ncol(ggdata):1]
getcoef <- function(t, startval, stopval) {
tstart <- 0
tend <- 1
b1 <- (stopval - startval)/(tend - tstart)
b0 <- startval - b1*tstart
return(b0 + b1*t)
}
scengrid <- expand.grid(variable=variables[-1], season=seasons, strength=strengths, stringsAsFactors = FALSE)
scengrid <- scengrid[,ncol(scengrid):1]
scengrid$xmu <- NA
scengrid$xsd <- NA
ts <- seq(0.05,0.95, length=10)
for(i in 1:nrow(scengrid)) {
if (scengrid$strength[i]=="weak") {
scengrid$ymu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 2)
scengrid$ysd[i] <- sqrt(getcoef(ts[scengrid$season[i]], startval=0, stopval = 2))
}
if (scengrid$strength[i]=="medium-strong") {
scengrid$ymu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 4)
scengrid$ysd[i] <- sqrt(getcoef(ts[scengrid$season[i]], startval=0, stopval = 4))
}
if (scengrid$strength[i]=="strong") {
scengrid$ymu[i] <- getcoef(ts[scengrid$season[i]], startval=0, stopval = 8)
scengrid$ysd[i] <- sqrt(getcoef(ts[scengrid$season[i]], startval=0, stopval = 8))
}
}
ggdata$y <- NA
for(i in seq(along=strengths)) {
for(j in seq(along=seasons)) {
for(k in seq(along=variables)) {
indtemp <- which(ggdata$strength==strengths[i] & ggdata$season==seasons[j] & ggdata$variable==variables[k])
if (variables[k]=="baseline")
ggdata$y[indtemp] <- dnorm(xseq, mean=0, sd=1)
else
ggdata$y[indtemp] <- dnorm(xseq, mean=scengrid$ymu[scengrid$strength==strengths[i] & scengrid$season==seasons[j] & scengrid$variable==variables[k]],
sd=scengrid$ysd[scengrid$strength==strengths[i] & scengrid$season==seasons[j] & scengrid$variable==variables[k]])
}
}
}
ggdata$season <- factor(paste0("season ", ggdata$season), levels=paste0("season ", 1:10))
library("ggplot2")
# Custom colors for the 4 factors
custom_colors <- c("baseline" = "darkgrey", "y" = "black")
# Custom line types for the 4 factors
custom_linetypes <- c("baseline" = "dashed", "y" = "solid")
p1 <- ggplot(data = ggdata[ggdata$strength == "weak",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("weak") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p1
p2 <- ggplot(data = ggdata[ggdata$strength == "medium-strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("medium-strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p2
p3 <- ggplot(data = ggdata[ggdata$strength == "strong",], aes(x = x, y = y, color = variable, linetype = variable)) +
geom_line() +
facet_wrap(~season, ncol = 1, scales="free_y") +
ggtitle("strong") +
theme_bw() +
theme(plot.title=element_text(size=16), axis.title = element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(),
strip.text.x=element_text(size=15), legend.position = "none") +
scale_color_manual(values = custom_colors) +
scale_linetype_manual(values = custom_linetypes)
p3
library("ggpubr")
p <- ggarrange(p1, p2, p3, ncol = 3, nrow = 1)#, widths=c(0.7, 0.7, 1))
p
ggsave("./Simulations/concdrift/results/figures/labeldrift.pdf", plot=p, width=12, height=16)
rm(list=ls());gc()
setwd("Z:/Projects/DESTATIS/PredErrorComplex/PPerfEstComplex")
load("./Simulations/nsrs/results/intermediate_results/results.Rda")
ls()
class(results)
length(results)
library("ggplot2")
library("dplyr")
# Visualise the results and analyse the bias:
# compare unbiased and biased version of estimates
ggframe <- rbind(results %>% mutate(type = "biased"),
results %>% mutate(estimated_error = corrected,
type = "de-biased (HT)")
) %>%
mutate(bias       = estimated_error - true_error)
head(results)
table(sapply(results, class))
resultssafe <- results
results <- do.call("rbind", results)
head(results)
load("./Simulations/nsrs/results/intermediate_results/results.Rda")
length(results)
dim(scenariogrid)
load("./simulations/nsrs/results/intermediate_results/scenariogrid.Rda")
dim(scenariogrid)
length(results)
head(scenariogrid)
fix(scenariogrid)
reorderind <- order(scenariogrid$N, scenariogrid$repetition, scenariogrid$correct_model)
scenariogrid <- scenariogrid[reorderind,]
head(scenariogrid)
library("ggplot2")
library("dplyr")
results <- do.call("rbind", results)
# Visualise the results and analyse the bias:
# compare unbiased and biased version of estimates
ggframe <- rbind(results %>% mutate(type = "biased"),
results %>% mutate(estimated_error = corrected,
type = "de-biased (HT)")
) %>%
mutate(bias       = estimated_error - true_error)
results %>% group_by(model, n, correct) %>% summarise(bias = mean(corrected - true_error))
results %>% group_by(model, n, correct) %>% summarise(bias = mean(estimated_error - true_error))
ggframe$type
ggframe$correct
ggframe$correctmod <- "model correctly specified"
ggframe$correctmod[!ggframe$correct] <- "model misspecified"
ggframe$correctmod <- factor(ggframe$correctmod, levels=c("model correctly specified", "model misspecified"))
ggframe$n <- paste0("n = ", ggframe$n)
ggframe$n <- factor(ggframe$n, levels=c("n = 100", "n = 500", "n = 1000"))
ggframe$model[ggframe$model=="regr.lm"] <- "linear models"
ggframe$model[ggframe$model=="regr.ranger"] <- "random forests"
ggframe$model <- factor(ggframe$model, levels=c("linear models", "random forests"))
# look at all settings jointly
p <- ggplot(data=ggframe, aes(y=bias, x = model, fill = type)) +
geom_boxplot() +
facet_wrap(~correctmod+n, nrow=2, scales="free_y") +
theme_bw() + theme(axis.title.x=element_blank(),
axis.title.y=element_text(size=14),
axis.text.x = element_text(angle=45, hjust = 1, color="black", size=12),
axis.text.y = element_text(color="black", size=12),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12),
legend.position = c(0.75, 0.9))
p
ggsave("./Simulations/nsrs/results/figures/nsrs.pdf", width=15, height=7)
# look at all settings jointly
p <- ggplot(data=ggframe, aes(y=bias, x = model, fill = type)) +
geom_boxplot() + ylab("Difference between estimated and true MSE values") +
facet_wrap(~correctmod+n, nrow=2, scales="free_y") +
theme_bw() + theme(axis.title.x=element_blank(),
axis.title.y=element_text(size=14),
axis.text.x = element_text(angle=45, hjust = 1, color="black", size=12),
axis.text.y = element_text(color="black", size=12),
legend.title = element_text(size=14),
legend.text = element_text(size=12),
strip.text = element_text(size=12),
legend.position = c(0.75, 0.9))
p
ggsave("./Simulations/nsrs/results/figures/nsrs.pdf", width=15, height=7)
load("./Simulations/nsrs/results/intermediate_results/results.Rda")
results[[1]]
