numnodes
if(numnodes > maxnleaf)
stop("bla bla bla.")
nodelist[[1]] <- 1 + (1:numnodes)
leftnode <- min(nodelist[[1]])
rightnode <- max(nodelist[[1]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
while(nleaf <= maxnleaf) {
for(i in leftnode:rightnode) {
numnodes <- sample(2:3, size=1, prob=c(2,1))
nodelist[[i]] <- max(nodelist[[i-1]]) + (1:numnodes)
}
leftnode <- min(nodelist[[leftnode]])
rightnode <- max(nodelist[[rightnode]])
nleaf <- rightnode-(leftnode-1)
leftnodes[count] <- leftnode
rightnodes[count] <- rightnode
count <- count+1
}
nodelist <- nodelist[1:rightnodes[length(rightnodes)-2]]
nlayer <- length(leftnodes)
leftnodes <- leftnodes[-nlayer]
rightnodes <- rightnodes[-nlayer]
return(list(nodelist=nodelist, leftnodes=leftnodes, rightnodes=rightnodes))
}
set.seed(123)
ui <- gen_tree_structure(20)
ui
set.seed(123)
ui <- gen_tree_structure(10)
ui
# plot_structure <-
x <- ui
x
x$leftnodes[max(x$leftnodes)]
x$leftnodes[length(x$leftnodes)]
x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]
1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)])
1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]) + 1
xw <- 1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]) + 1
xw
x$leftnodes
length(x$leftnodes)
length(x$leftnodes)-1
1.5*(length(x$leftnodes)-1) + 1
xh <- 1.5*(length(x$leftnodes)-1) + 1
x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]
x0s <- 0.5 + 1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)])
x0s
x0s <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
x0s
x
x$nodelist
set.seed(123)
ui <- gen_tree_structure(15)
ui
ui
# plot_structure <-
x <- ui
xw <- 1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]) + 1
xh <- 1.5*(length(x$leftnodes)-1) + 1
x0s <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
x0s
x0s-0.5
length(x0s-0.5)
x
x
x
xw <- 1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]) + 1
xh <- 1.5*(length(x$leftnodes)-1) + 1
x0s <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
x0s
x$rightnodes[length(x$rightnodes)]:x$leftnodes[length(x$leftnodes)]
x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
x0list <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
x0list[[1]]
y0list <- rep(0.5, length(x0list[[1]]))
x0list <- y0list <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
y0list
x0list <- y0list <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
x0list <- y0list <- namelist <- list()
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
nameslist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
sapply(namelist[[1]], function(x) which(sapply(x$nodelist, function(y) x %in% y)))
sapply(namelist[[1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
tempobj <- sapply(namelist[[1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
unique(tempobj)
tempobj <- sapply(namelist[[1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[2]] <- unique(tempobj)
namelist[[2]]
y0list[[1]][1]
y0list[[1]][1] + 1.5
y0list[[1]] <- rep(y0list[[1]][1] + 1.5, length(namelist[[2]]))
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
tempobj <- sapply(namelist[[1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[2]] <- unique(tempobj)
y0list[[2]] <- rep(y0list[[1]][1] + 1.5, length(namelist[[2]]))
y0list
?tapply
tapply(x0list[[1]], tempobj, mean)
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
tempobj <- sapply(namelist[[1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[2]] <- unique(tempobj)
x0list[[2]] <- tapply(x0list[[1]], tempobj, mean)
y0list[[2]] <- rep(y0list[[1]][1] + 1.5, length(namelist[[2]]))
x0list
y0list
tempobj <- sapply(namelist[[2]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
tempobj
namelist[[3]] <- unique(tempobj)
x0list[[3]] <- tapply(x0list[[2]], tempobj, mean)
y0list[[3]] <- rep(y0list[[2]][1] + 1.5, length(namelist[[3]]))
x0list
y0list
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
count <- 2
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
count <- 3
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
x0list
y0list
count <- 4
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
x0list
y0list
length(x$rightnodes)
length(x$leftnodes)
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
for(count in 2:length(x$leftnodes)) {
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
}
x0list
y0list
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
for(count in 2:length(x$leftnodes)) {
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
}
x0list <- y0list <- namelist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
count <- 2
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
x$leftnodes[count]
x$leftnodes
length(x$leftnodes) - count
length(x$leftnodes) - count-1
x$leftnodes[length(x$leftnodes)-count+1]
x$rightnodes[length(x$leftnodes)-count+1]
x$leftnodes[length(x$leftnodes)-count+1]:x$rightnodes[length(x$leftnodes)-count+1]
tempnodes <- x$leftnodes[length(x$leftnodes)-count+1]:x$rightnodes[length(x$leftnodes)-count+1]
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
tempobj
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
tempnodes
y0list[[count-1]]
y0list[[count-1]] + 0.5
y0list[[count-1]] + 0.5
x0list[[count-1]]
tempobj
sapply(tempobj, function(x) which(x==namelist[[count]]))
namelist[[count]]
x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))]
length(namelist[[count-1]])
y0list[[count]]
rep(y0list[[count]][1], length(namelist[[count-1]]))
rep(y0list[[count]][1], length(namelist[[count-1]])) - 0.5
x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))]
x0list[[count-1]]
y0list[[count-1]]
xltemp <- c(x0list[[count-1]], x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))])
yltemp <- c(y0list[[count-1]] + 0.5, rep(y0list[[count]][1], length(namelist[[count-1]])) - 0.5)
length(x0list[[count-1]])
length(x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))])
rep(1:length(x0list[[count-1]]), 2)
grouptemp <- rep(1:length(x0list[[count-1]]), 2)
dftemp <- data.frame(xl=xltemp, yl=yltemp, group=grouptemp)
dftemp
x0list <- y0list <- namelist <- list()
xyllist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
for(count in 2:length(x$leftnodes)) {
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
tempnodes <- x$leftnodes[length(x$leftnodes)-count+1]:x$rightnodes[length(x$leftnodes)-count+1]
xltemp <- c(x0list[[count-1]], x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))])
yltemp <- c(y0list[[count-1]] + 0.5, rep(y0list[[count]][1], length(namelist[[count-1]])) - 0.5)
grouptemp <- rep(1:length(x0list[[count-1]]), 2)
dftemp <- data.frame(xl=xltemp, yl=yltemp, group=grouptemp)
if(count > 2)
dftemp$group <- dftemp$group + xyllist[[count-2]]$group[length(xyllist[[count-1]]$group)]
xyllist[[count-1]] <- dftemp
}
count
xyllist
x0list <- y0list <- namelist <- list()
xyllist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
for(count in 2:length(x$leftnodes)) {
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
tempnodes <- x$leftnodes[length(x$leftnodes)-count+1]:x$rightnodes[length(x$leftnodes)-count+1]
xltemp <- c(x0list[[count-1]], x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))])
yltemp <- c(y0list[[count-1]] + 0.5, rep(y0list[[count]][1], length(namelist[[count-1]])) - 0.5)
grouptemp <- rep(1:length(x0list[[count-1]]), 2)
dftemp <- data.frame(xl=xltemp, yl=yltemp, group=grouptemp)
if(count > 2)
dftemp$group <- dftemp$group + xyllist[[count-2]]$group[length(xyllist[[count-2]]$group)]
xyllist[[count-1]] <- dftemp
}
xyllist
do.call("rbind", xyllist)
xydf <- do.call("rbind", xyllist)
x0list
xypdf <- data.frame(x0=unlist(x0list), y0=unlist(y0list))
xypdf
library("ggplot2")
library("ggforce")
?geom_circle
p <- ggplot() + geom_circle(data=xypdf, aes(x0=x0, y0=y0, r=0.5))
p
p <- ggplot() + geom_circle(data=xypdf, aes(x0=x0, y0=y0, r=0.5)) + geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
xyldf <- do.call("rbind", xyllist)
p <- ggplot() + geom_circle(data=xypdf, aes(x0=x0, y0=y0, r=0.5)) + geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
p
namelist
dim(xyldf)
sapply(namelist, length)
sum(sapply(namelist, length))
dim(xypdf)
xypdf <- data.frame(x0=unlist(x0list), y0=unlist(y0list), nam=unlist(namelist))
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + geom_text(aex(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + geom_text(aes(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
p
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + theme_bw() +
geom_text(aes(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
p
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + theme_classic() +
geom_text(aes(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group))
p
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + theme_bw() +
geom_text(aes(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group)) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
set.seed(123)
ui <- gen_tree_structure(15)
ui
plot_structure <- function(x) {
require("ggplot2")
require("ggforce")
xw <- 1.5*(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]) + 1
xh <- 1.5*(length(x$leftnodes)-1) + 1
x0list <- y0list <- namelist <- list()
xyllist <- list()
x0list[[1]] <- 0.5 + 1.5*(0:(x$rightnodes[length(x$rightnodes)] - x$leftnodes[length(x$leftnodes)]))
y0list[[1]] <- rep(0.5, length(x0list[[1]]))
namelist[[1]] <- x$leftnodes[length(x$leftnodes)]:x$rightnodes[length(x$rightnodes)]
for(count in 2:length(x$leftnodes)) {
tempobj <- sapply(namelist[[count-1]], function(x1) which(sapply(x$nodelist, function(y1) x1 %in% y1)))
namelist[[count]] <- unique(tempobj)
x0list[[count]] <- tapply(x0list[[count-1]], tempobj, mean)
y0list[[count]] <- rep(y0list[[count-1]][1] + 1.5, length(namelist[[count]]))
tempnodes <- x$leftnodes[length(x$leftnodes)-count+1]:x$rightnodes[length(x$leftnodes)-count+1]
xltemp <- c(x0list[[count-1]], x0list[[count]][sapply(tempobj, function(x) which(namelist[[count]]==x))])
yltemp <- c(y0list[[count-1]] + 0.5, rep(y0list[[count]][1], length(namelist[[count-1]])) - 0.5)
grouptemp <- rep(1:length(x0list[[count-1]]), 2)
dftemp <- data.frame(xl=xltemp, yl=yltemp, group=grouptemp)
if(count > 2)
dftemp$group <- dftemp$group + xyllist[[count-2]]$group[length(xyllist[[count-2]]$group)]
xyllist[[count-1]] <- dftemp
}
xyldf <- do.call("rbind", xyllist)
xypdf <- data.frame(x0=unlist(x0list), y0=unlist(y0list), nam=unlist(namelist))
p <- ggplot(data=xypdf) + geom_circle(aes(x0=x0, y0=y0, r=0.5)) + theme_bw() +
geom_text(aes(x=x0, y=y0, label=nam)) +
geom_line(data=xyldf,
aes(x=xl, y=yl, group=group)) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
legend.position="none",
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.background=element_blank())
p
}
plot_structure(ui)
set.seed(123)
ui <- gen_tree_structure(50)
ui
plot(ui)
names(ui)
plot_structure(ui)
plot_structure(gen_tree_structure(50))
plot_structure(gen_tree_structure(50))
plot_structure(gen_tree_structure(50))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
plot_structure(gen_tree_structure(80))
50*10
50*20
50*50
ui <- gen_tree_structure(50)
ui$leftnodes
ui$rightnodes
ui$leftnodes[length(ui$leftnodes)]
ui$rightnodes[length(ui$rightnodes)]
ui$rightnodes[length(ui$rightnodes)] - ui$leftnodes[length(ui$leftnodes)]
ui$rightnodes[length(ui$rightnodes)] - ui$leftnodes[length(ui$leftnodes)] + 1
ui <- gen_tree_structure(10)
ui$rightnodes[length(ui$rightnodes)] - ui$leftnodes[length(ui$leftnodes)] + 1
plot_structure(ui)
ui <- gen_tree_structure(10)
ui$rightnodes[length(ui$rightnodes)] - ui$leftnodes[length(ui$leftnodes)] + 1
plot_structure(ui)
tempobj <- gen_tree_structure(50)
tempobj <- gen_tree_structure(50)
tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
tempobj <- gen_tree_structure(50)
tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
nleaf <- 0
count <- 0
set.seed(1234)
while(nleaf!=50) {
tempobj <- gen_tree_structure(50)
nleaf <- tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
count <- count + 1
}
count
plot(tempobj)
plot_structure(tempobj)
tempobj$rightnodes
tempobj$leftnodes
88-38
getwd()
setwd("D:/Projects/DESTATIS/PredErrorComplex/PPerfEstComplex")
source("./simulations/hierpr/functions.R")
nleaf <- 0
count <- 0
set.seed(1234)
while(nleaf!=50) {
tempobj <- gen_tree_structure(50)
nleaf <- tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
count <- count + 1
}
treestruc <- tempobj
plot_structure(treestruc)
save(treestruc, file="./simulations/hierpr/results/treestruc.Rda")
save(treestruc, file="./simulations/hierpr/results/intermediate_results/treestruc.Rda")
sapply(1:length(treestruc$leftnodes), function(x) treestruc$leftnodes[x] - treestruc$rightnodes[x] + 1)
sapply(1:length(treestruc$leftnodes), function(x) treestruc$rightnodes[x] - treestruc$leftnodes[x] + 1)
sum(sapply(1:length(treestruc$leftnodes), function(x) treestruc$rightnodes[x] - treestruc$leftnodes[x] + 1))
nleaf <- 0
count <- 0
set.seed(123)
while(nleaf!=50) {
tempobj <- gen_tree_structure(50)
nleaf <- tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
count <- count + 1
}
count
treestruc <- tempobj
plot_structure(treestruc)
nleaf <- 0
count <- 0
set.seed(12)
while(nleaf!=50) {
tempobj <- gen_tree_structure(50)
nleaf <- tempobj$rightnodes[length(tempobj$rightnodes)] - tempobj$leftnodes[length(tempobj$leftnodes)] + 1
count <- count + 1
}
count
treestruc <- tempobj
plot_structure(treestruc)
sum(sapply(1:length(treestruc$leftnodes), function(x) treestruc$rightnodes[x] - treestruc$leftnodes[x] + 1))
save(treestruc, file="./simulations/hierpr/results/intermediate_results/treestruc.Rda")
sum(sapply(1:length(treestruc$leftnodes), function(x) treestruc$rightnodes[x] - treestruc$leftnodes[x] + 1))
mX = cbind(rep(1, 200), matrix(rnorm(1000), 200, 5))
vCoef1 = rep(0, 6)
vCoef2 = rnorm(6)
vCoef3 = rnorm(6)
# vector of probabilities
vProb = cbind(exp(mX%*%vCoef1), exp(mX%*%vCoef2), exp(mX%*%vCoef3))
# multinomial draws
mChoices = t(apply(vProb, 1, rmultinom, n = 1, size = 1))
dfM = cbind.data.frame(y = apply(mChoices, 1, function(x) which(x==1)), mX)
m <- multinom(y ~ ., data = dfM[,-2])
summary(m)
library("nnet")
m <- multinom(y ~ ., data = dfM[,-2])
summary(m)
vCoef2
vCoef3
dim(mX)
n <- 1000
mX = cbind(rep(1, n), matrix(rnorm(n*5), n, 5))
vCoef1 = rep(0, 6)
vCoef2 = rnorm(6)
vCoef3 = rnorm(6)
# vector of probabilities
vProb = cbind(exp(mX%*%vCoef1), exp(mX%*%vCoef2), exp(mX%*%vCoef3))
# multinomial draws
mChoices = t(apply(vProb, 1, rmultinom, n = 1, size = 1))
dfM = cbind.data.frame(y = apply(mChoices, 1, function(x) which(x==1)), mX)
library("nnet")
m <- multinom(y ~ ., data = dfM[,-2])
summary(m)
vCoef2
vCoef3
n <- 10000
mX = cbind(rep(1, n), matrix(rnorm(n*5), n, 5))
vCoef1 = rep(0, 6)
vCoef2 = rnorm(6)
vCoef3 = rnorm(6)
# vector of probabilities
vProb = cbind(exp(mX%*%vCoef1), exp(mX%*%vCoef2), exp(mX%*%vCoef3))
# multinomial draws
mChoices = t(apply(vProb, 1, rmultinom, n = 1, size = 1))
dfM = cbind.data.frame(y = apply(mChoices, 1, function(x) which(x==1)), mX)
library("nnet")
m <- multinom(y ~ ., data = dfM[,-2])
summary(m)
vCoef2
vCoef3
